@startuml
title 城管类图
class User <<用户实体类>>{
    -id: String
    -name : String
    -sts : int
}

class Dept<<责任部门实体类>>{
    -id: String
    -deptName : String
    -sts : int
    -level : String
    -parent : Dept
    -userList : User[*]
}

class Grid<<网格实体类>>{
    -id: String
    -gridCode : String
    -gridName : String
    -remark : String
    -parent : String 
    -level : int 
    -area : String
    -initialDate : date
    -terminationDate : date
    -sts : int
    -dept : Dept
    -user : User
    -publish : Publish
    -record : Record
    -publish : Publish
}

class Component<<部件实体类>>{
    -id: String
    -eventType : EventType
    -componentInfo : ComponentInfo
    -sts : int  // 用于记录该部件删除
    -publish : Publish
    -record : Record
}


class ComponentInfo<<部件信息实体类>>{
    -id : String
    -objId : String
    -objName : String
    -mainDeptCode : String
    -mainDept : String
    -ownershipDeptCode : String
    -ownershipDeptName : String
    -maintenanceDeptCode : String
    -maintenanceDeptName  : String
    -bgid : Grid
    -objState : Kv
    -initialDate : date
    -changeDate : date
    -dataSource : Kv
    -note : String
}

class Publish<<发布实体类>>{
    -id : String
    -name : String
    -layerId : String     //图层ID:当发布后GIS平台将把该图层ID返回城管中，城管再次添加元素可以找到对应GIS平台的哪个图层
    -url : String         //GIS平台提供的发布的图层地址
    -kv : Kv              //类型：编辑的是部件、网格。
    -sts : int            //状态：用于判断是发布、未发布状态
    -user : User          //用于记录谁发布的
    -eventType : EventType
}
class Record<<编辑实体类>>{
    -id : String
    -coordinate : String  //坐标
    -user : User
    -publish : Publish
    -sts : int //判断该记录是编辑中、发布
}

class Kv<<Kv实体类>>{
    -id : String
    -tableName : String
    -fieldName : String
    -value : String
    -sts : int
}

class Event<<案件实体类>>{
    -id : String
    -eventCode : String
    -Component : ComponentInfo //部件编码
    -eventTypeId : EventType     //分类id
    -represent : String
    -gridId : Grid
    -location : String
    -User : User
    -phone : String
    -eventSource : Kv
    -x : double
    -y : double
    -taskId : String
    -timeLimit : DeptTimeLimit
    -sts       : int             // 事件状态     派遣/挂起等等
    -recTypeId : Kv       //案件类型    日常  、转向普查、其他
    -region : Grid    //区域    一类区域  二类区域  三类区域
    -eventSate : Kv  // 案件状态
    -eventCondition : EventCondition
}

class EventType<<分类实体类>>{
    -id   : String
    -type : int
    -code : String
    -name : String
    -level : int 
    -parentId : String
}

class EventFile<<事件附件实体类>>{
    -id : String
    -fileName : String
    -eventId : Event
    -fileType ：int
}
class EventCondition<<立案条件实体类>>{
    -id : String
    -region : String   // 区域     不同区域立案条件不同 
    -parent : String
    -conditionValue : String
    -eventTypeId : EventType
}

class DeptTimeLimit<<专业部门时限实体类>>{
    -id : String
    -eventCondition : EventCondition   //立案条件外键
    -level : Kv  //ABC 类   每一个立案条件 都有 ABC三类  对应三类时间
    -timeLimit : int     //时限
    -timeType : Kv    // 时间类别  小时 天  分
}

class ProcessTimeLimit<<流程时限实体类>>{
    -id : String
    -taskName : String
    -level : Kv
    -timeLimit : int     //时限
}

class Statistics<<流转统计实体类>>{
    -id                   : String
    -eventId              : Event
    -stateCdae  //状态时间   计算的时候转化成分
    -starTime : date
    -endTime  : date
    -taskId   : int
    -deptTimeLimit  :  DeptTimeLimit
    -processTimeLimit  :  ProcessTimeLimit
    -opinions : String           //处理意见
    -eventFileId : EventFile     //附件    
    -patrolReport	      : int       //监督员上报
    -publicReport	      : int       //公众举报
    -report			      : int       //上报
    -reportPatrolId	      : User       //上报监督员标识
    -reportPatrolName	  : User       //上报监督员
    -validPatrolReport    : int       //监督员有效上报
    -validPublicReport    : int       //公众举报有效上报
    -validReport		  : int       //有效上报
    -needSendVerify         : int           //应发核实               
    -sendVerify             : int           //发核实
    -intimeSendVerify       : int           //按时发核实
    -needVerify             : int           //应核实
    -verify                 : int           //核实
    -intimeVerify           : int           //按期核实
    -sendVerifyHumanId      : User          //发核实人标识
    -sendVerifyHumanName    : User          //发核实人      受理员派遣给监督员
    -sendVerifyHumanRoleId  : int           //发核实人岗位标识
    -verifyPatrolId         : User          //核实监督员标识
    -verifyPatrolName       : User          //核实监督员
    -notOperate       : int     //不予受理
    -toOperate        : int     //待受理
    -intimeOperate    : int     //按时受理
    -operate          : int     //受理
    -operateHumanId   : User     //受理人标识
    -operateHumanName : User  //受理人
    -operateRoleId    : int     //受理人岗位标识
    -inst           :  int      //立案
    -intimeInst     :  int      //按时立案
    -toInst         :  int      //待立案
    -notInst        :  int      //不予立案
    -instHumanId    :  User      //立案人标识m
    -instHumanName  :  User   //立案人
    -instRoleId     :  int      //立案人岗位标识
    -dispatch             : int      //派遣     已经派遣      
    -toDispatch           : int      //待派遣   等待派遣 
    -needDispatch         : int      //应派遣   一共需要派遣    
    -intimeDispatch       : int      //按时派遣     
    -dispatchHumanId      : User      //派遣员标识     
    -dispatchHumanName    : User   //派遣员         
    -dispatchHumanRoleId  : int      //派遣员岗位标识 
    -dispose              : int      //处置         
    -needDispose          : int      //应处置       
    -intimeDispose        : int      //按时处置     
    -overtimeToDispose    : int      //超时未处置   
    -overtimeDispose      : int      //超时处置     
    -toDispose            : int      //未处置       
    -disposeOpinion       : text     //处置意见       
    -disposeUnitId        : int      //处置部门标识   
    -disposeUnitName      : String   //处置部门   
    -intimeSupervise       : int      //按时督查   	
    -needSupervise         : int      //应督查   		
    -supervise             : int      //督查    		
    -toSupervise           : int      //待督查   		
    -superviseHumanId      : int      //督查人标识   	
    -superviseHumanName    : String   //督查人    		
    -superviseHumanRoleId  : int      //督查人岗位标识
    -check                 : int      //核查            
    -needCheck             : int      //应核查          
    -intimeCheck           : int      //按时核查        
    -intimeSendCheck       : int      //按时发核查      
    -sendCheck             : int      //发核查          
    -needSendCheck         : int      //应发核查        
    -checkTrans            : int      //核查批转        
    -checkPatrolId         : int      //核查监督员标识    
    -checkPatrolName       : String   //核查监督员        
    -checkTransHumanId     : int      //核查受理员标识    
    -checkTransHumanName   : String   //核查受理员        
    -checkTransHumanRoleId : int      //核查受理员岗位标识
    -checkTransTime        : datet    //核查批转时间      
    -sendCheckHumanId      : int      //发核查人标识      
    -sendCheckHumanName    : int      //发核查人          
    -sendCheckHumanRoleId  : int      //发核查人岗位标识  
    -cancel         :  int       //作废       
    -cancelOpinion  :  text      //作废意见     
    -hang           :  int       //挂账       
    -hisHang        :  int       //历史挂账   
    -postpone       :  int       //延期       
    -rework         :  int       //返工       
    -multiRework    :  int       //返工次     
    -displayStyleId :  int       //显示类型标识 
    -shuffle        :  int       //推诿         
}

Dept --> User
Grid --> User
Grid --> Dept
Grid --> Record
Grid --> Publish
Grid --|> Kv
Component --> ComponentInfo
Component --> Record
Component --> Publish
ComponentInfo --|> Event
Publish --> Record
Publish --|> Kv
Event --> EventType
EventCondition -->  EventType 
Event --|> Kv
Event --|> Statistics
EventType -->  DeptTimeLimit
Statistics --> DeptTimeLimit 
Statistics --> ProcessTimeLimit 
Statistics --> EventFile


' class ComponentController<<部件界面类>>{
'     -ComponentService
'     -ComponentInfoService
'     +ComponentList(component):Component[*]         // 查询部件集合
'     +saveComponentList(Component[*]):boolean       // 保存部件
'     +componentImport():boolean
'     +objState() : Kv[*]
'     +dataSource() : Kv[*]
'     +grid() : Grid[*]
'     +record(ComponentType): Record[*]
'     +componentByRecordId(record) : Component[*]
' }

' class ComponentService<<部件业务类>>{
'     -ComponentInfoService
'     +getComponentList(component):Component[*]      // 查询部件集合
'     +getComponent(component) :component
'     +saveComponentList(component[*]): boolean
'     +saveComponent(component) : boolean
'     +savePublish(publis) : boolean
'     +saveRecord(record,publish) : boolean
'     +getComponentByRecordId(record) : Component[*]
'     +deleteComponent(component) : boolean
' }
' class ComponentTypeService<<部件分类业务类>>{
'     +getComponentTypeList():ComponentType[*]       // 获取部件分类集合
'     +getComponentType(component):ComponentType     // 获取部件分类
' }

' class PublisheController<<发布界面类>>{
'     +getPublishList() : Publish[*]
'     +getPublishOne() : Publish
'     +layerPublish(publish) : boolean
' }
' class PublisheService<<发布业务类>>{
'     +getPublishList() : Publish[*]
'     +getPublishOne() : Publish
'     +layerPublish(publish) : boolean
' }

' class RecordService<<编辑业务类>>{
'     +save(record) : boolean
'     +update(record) : boolean
'     +findAllByPublishId() : Record[*]
' }
' class ImportController<<导入界面类>>{
'     +componentImport(layerName,layerSettingType,shpType) : String
'     +gridImport(layerName,layerSettingType,shpType) : String
'     +checkPublish(): boolean
' }
' class ImportService<<导入业务类>>{
'     +componentImport(layerName,layerSettingType,shpType) : String
'     +gridImport(layerName,layerSettingType,shpType) : String
'     +checkPublish(): boolean
' }

' class GridController<<网格界面类>>{
'     +getGridList() :  Grid[*]
'     +gridSave(grid) : boolean
'     +gridUpdate(grid) : boolean
'     +getGridOne(grid) : Grid
'     +gridDelete(grid) : boolean
' }

' class GridService<<网格业务类>>{
'     +search(grid) : Grid[*]
'     +delete(grid) : boolean
'     +update(grid) : boolean

' }










@enduml